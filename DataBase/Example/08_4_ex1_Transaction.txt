1. Transaction 이란?
	논리적 기능을 수행하기 위한 작업의 단위 또는 한번에 모두 수행되어야 할 일련의 연산들

2. Transaction의 특징
	- 트랜잭션은 데이터베이스 시스템에서 병행 제어 및 회복 작업 시 처리되는 작업의 논리적 단위입니다.
	- 사용자가 시스템에 대한 서비스 요구 시 시스템이 응답하기 위한 상태 변환 과정의 작업단위입니다.
	- 하나의 트랜잭션은 Commit되거나 Rollback되어야 합니다.

3. Transaction의 성질
	3-1. 원자성(Atomicity)
		- 트랜잭션 내의 모든 명령은 반드시 완벽히 수행되어야 합니다.
		- 전부가 완벽히 수행되지 않고 어느하나라도 오류가 발생하면 트랜잭션 전부가 취소되어야 합니다.

	3-2 . 일관성(Consistency)
		- 트랜잭션이 그 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 변환합니다.
		- 시스템이 가지고 있는 고정요소는 트랜잭션 수행 전과 트랜잭션 수행 완료 후의 상태가 같아야 합니다.

	3-3. 독립성(Isolation)
		- 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행중에 다른 트랜잭션의 연산이 끼어들 수 없습니다.
		- 수행중인 트랜잭션은 완전히 완료될 때까지 다른 트랜잭션에서 수행 결과를 참조할 수 없습니다.

	3-4. 영속성(Durablility)
		- 성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되어야 합니다.

4. Transaction의 상태
	활동(Active) : 트랜잭션이 실행중인 상태
	실패(Failed) : 트랜잭션 실행에 오류가 발생하여 중단된 상태
	철회(Aborted) : 트랜잭션이 비정상적으로 종료되어 Rollback 연산을 수행한 상태
	부분 완료(Partially Committed) : 트랜잭션의 마지막 연산까지 실행하고, Commit 연산이 실행되기 직전의 상태
	완료(Committed) : 트랜잭션이 성공적으로 종료되어 Commit 연산을 실행한 후의 상태

5. Transaction의 연산
	- COMMIT;
		연산의 결과를 DB에 적용합니다.
	- ROLLBACK;
		연산의 결과를 취소하여, 연산 이전의 DB상태로 되돌아 갑니다.