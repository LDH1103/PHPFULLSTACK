1. 데이터베이스(Database, DB)란? ( 참조 : 0_img1_WebDev.png )
	다수의 사용자에 의해 공유되어 사용될 목적으로 통합하여 관리되는 "데이터의 집합"을 말합니다.

2. DBMS란? ( 참조 : 0_img2_DBMS.PNG )
	DBMS(DataBase Management System : 데이터베이스 관리 시스템)이란 데이터베이스를 관리하며
	응용 프로그램들이 데이터베이스를 공유하며 사용할 수 있는 환경을 제공하는 소프트웨어입니다.
	현재는 RDBMS(Relational DBMS)를 주로 사용되고 있고,
	SQL(Structured Query Language)라는 언어를 통해 제어합니다.

3. DBMS의 종류 (참조 : 0_img3_DBMSKinds.PNG )

4. DBMS의 분류
	계층형(Hierarchical), 망형(Network), 관계형(Relational), 
	객체지향형(Object-Oriented), 객체관계형(Object-Relational) 등으로 분류됩니다. 
	현재 사용되는 DBMS 중에는 관계형 DBMS가 가장 많은 부분을 차지합니다.

5. RDBMS의 구조 ( 참조 : 0_img4_RDBMSStructure.PNG)
	- 테이블(Table) : 
		> 데이터를 저장하는 장소입니다.
		> Relation 또는 Entity라고도 불립니다.
	- 컬럼(Column) : 
		> 테이블에서 열을 의미합니다.
		> 속성(Attribute)라고도 불립니다.
		> 컬럼명과 컬럼값으로 구성됩니다.
			* 컬럼명 :
				> 속성명, 식별자(identifier)라고도 불립니다.
				> RDB에서 각각을 구분할 수 있는 논리적인 개념입니다.
			* 컬럼값 :
				> 속성값, Attribute값이라고도 불립니다.
				> 각 데이터의 값입니다.
	- 레코드(Recode) : 
		> Tuple라고도 불립니다.
		> 테이블에서 행을 의미합니다.

6. SQL이란?
	SQL(Structured Query Language)은 관계형 데이터베이스에서 사용되는 언어로, 
	"에스큐엘" 또는 "시퀄"로 읽습니다.
	SQL은 특정 회사에서 만드는 것이 아니라 국제표준화기구에서 SQL에 대한 표준을 정합니다.
	하지만 SQL을 사용하는 DBMS를 만드는 회사가 여러 곳이기 때문에 표준 SQL이 각 회사 제품의 특성을 모두 포용하지 못합니다.
	그래서 DBMS를 만드는 회사에서는 되도록 표준 SQL을 준수하되, 각 제품의 특성을 반영한 SQL을 사용합니다.

7. 쿼리 문법의 종류
	- DDL (Data Definition Language, 데이터 정의 언어) :
		관계형 데이터베이스의 구조를 정의하는데 사용합니다.
	- DML (Data Manipulation Language, 데이터 조작 언어) : 
		데이터베이스를 조작(검색, 등록, 삭제, 갱신)을 하기 위해 사용합니다.
	- DCL (Data Control Language, 데이터 제어 언어) : 
		데이터베이스에서 데이터에 대한 액세스를 제어하기 위해 사용합니다.
	- TCL (Transaction Control Language, 트랜잭션 제어 언어) : 
		논리적인 작업의 단위를 묶어서 DML에 의해 조작된 결과를 작업단위(트랜잭션) 별로 제어하기위해 사용합니다.

8. MariaDb & HediSQL Install
	- 참조 : https://m.blog.naver.com/heartflow89/221074331956

	- 샘플데이터 베이스
		> 파일 다운로드 및 압축해제 : https://github.com/ByungjooPark/PHPFULLSTACK.git 
			* DataBase > Sample > employees.zip
		> cmd 관리자권한으로 실행
		> "employees.sql"이 있는 디렉토리까지 이동 : cd 커멘드 이용
		> mariaDB접속 : "mysql -u root -p" 입력 후 패스워드 입력해서 
		> sql 실행 : "source employees.sql;" 입력
		> employees DB 확인 : show database;
		> 커밋하기 : COMMIT;
		> MariaDB 접속 해제 : EXIT;

	- hediSQL autocommit설정 해제
		> SELECT @@autocommit;
		> SET @@autocommit:0;


**********************************
****** 이하 필요에 따라 참조 ******
**********************************
1. 데이터베이스의 정의 
	데이터베이스는 특정 조직의 업무를 수행하는 데 필요한 상호 관련된 데이터들의 모임입니다.
	- 통합된 데이터(Integrated Data): 자료의 중복을 배제한 데이터의 모임입니다.
	- 저장된 데이터(Stored Data): 컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료입니다.
	- 운영 데이터(Operational Data): 조직의 고유한 업무를 수행하는 데 존재 가치가 확실하고 없어서는 안 될 반드시 필요한 자료입니다.
	- 공용 데이터(Shared Data): 여러 응용 시스템들이 공동으로 소유하고 유지하는 자료입니다.

2. 데이터베이스의 특징 
	- 실시간 접근성(Real-Time Accessibility) : 
		> 수시적이고 비정형적인 질의(조회)에 대하여 실시간 처리에 의한 응답이 가능해야 합니다.
	- 계속적인 변화(Continuous Evolution) :
		> 데이터베이스의 상태는 동적이다. 즉 새로운 데이터의 삽입(Insert),삭제(Delete),갱신(Update)로 항상 최신의 데이터를 유지합니다.
	- 동시공용(Concurrent Sharing) :
		>데이터베이스는 서로 다른 목적을 가진 여러 응용자들을 위한 것이므로 다수의 사용자가 동시에 같은 내용의 데이터를 이용할 수 있어야 합니다.
	- 내용에 의한 참조(Content Reference) :
		>데이터베이스에 있는 데이터를 참조할 때 데이터 레코드의 주소나 위치에 의해서가 아니라, 사용자가 요구하는 데이터 내용으로 데이터를 찾습니다.

3. 무결성이란? 
	데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제값이 일치하는 정확성을 의미합니다.

4. 무결성 제약조건
	데이터베이스에 들어있는 데이터의 정확성(일관성)을 보장하기 위해 
	부정확한 자료가 데이터베이스 내에 저장되는 것을 방지하기 위한 제약 조건을 의미합니다.

5. 무결성을 유지하는 방법
	대표적으로 사용되는 방법은 중앙 통제에 의한 데이터 갱신으로서,
	이 방법은 검증 프로그램을 이용하여 모든 갱신 처리 과정에서 반드시 검증 단계를 거치도록 통제를 합니다.
	검증 프로그램이 무결성을 검증하기 위해 무결성 규정을 사용합니다.

	- 규정이름 : 무결성 규정을 참조할 때 사용하는 식별자
	- 트리거조건 : 트랜잭션의 접근 유형 및 데이터, 검사할 시기 명시
	- 프레디킷(제약조건) : 무결성을 위한 검사조건
	- 위반조치 : 검사결과 무결성 위반이 발견되었을 때 처리할 조치

6. 무결성의 종류 
	- 개체 무결성 : 테이블에서 기본키를 구성하는 속성은 Null값이나 중복값을 가질 수 없는 규정
	- NULL 무결성 : 테이블의 특정속성 값이 Null이 될 수 없도록 하는 규정
	- 고유 무결성 : 테이블의 특정 속성에 대해서 각 레코드가 갖는 값들이 서로 달라야 한다는 규정
	- 참조 무결성 : 외래키 값은 Null이거나 참조 테이블의 기본키 값과 동일해야 한다는 규정
	- 도메인 무결성 : 특정 속성의 값이, 그 속성이 정의된 도메인에 속한 값이어야 한다는 규정
	- 키 무결성 : 하나의 테이블에는 적어도 하나의 키가 존재해야 한다는 규정
	- 사용자 정의 무결성 : 속성 값들이 사용자가 정의한 제약조건에 만족되어야 한다는 규정
	- 관계 무결성 : 테이블에 어느 한 레코드의 삽입 가능 여부 또는 한 테이블과 다른 테이블의 레코드들 사이의 관계에 대한 적절성 여부를 지정한 규정